{"version":3,"sources":["config.js","axios/index.js","components/reusable-components/countryCard/index.js","components/common/home/index.js","components/reusable-components/backButton/index.js","components/common/countryInformation/index.js","App.js","reportWebVitals.js","fonts/nunito-sans/NunitoSans-Regular.ttf","fonts/nunito-sans/NunitoSans-Bold.ttf","index.js"],"names":["config","baseUrl","axios","create","baseURL","CountryCard","props","history","useHistory","country","className","onClick","push","handleClick","src","flag","alt","name","population","region","capital","Home","useState","countries","setCountries","filteredcountries","setFilteredCountries","regionDDLStyles","indicatorSeparator","styles","display","useEffect","getCountries","a","Axios","get","result","data","handleRegionSelection","selectedOption","selectedRegion","value","regionCountries","length","type","onChange","event","e","txt","target","toLowerCase","searchedCountries","filter","Country","includes","handleSearch","placeholder","classNamePrefix","options","label","map","alpha2Code","BackButton","goBack","icon","faLongArrowAltLeft","CountryInformation","sideBorders","setSideBorders","selectedCountry","setSelectedCountry","countryData","useLocation","state","bordersNames","borders","index","border","sideBorder","countryBorders","nativeName","subregion","topLevelDomain","domain","idx","currencies","currency","languages","lang","App","darkMode","setDarkMode","faMoon","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2e09a07.chunk.js","sourcesContent":["// Configuration file for holding app variables.\r\nconst config = {\r\n    baseUrl: 'https://restcountries.eu/rest/v2/'\r\n}\r\n\r\nexport default config;","import axios from \"axios\";\r\nimport config from \"../config\";\r\n\r\n// This method was built for creating a centralized instance for Axios usage.\r\nexport default axios.create({\r\n\tbaseURL: config.baseUrl\r\n});\r\n","import { useHistory } from 'react-router-dom';\r\nimport './styles.scss';\r\n\r\nconst CountryCard = (props) => {\r\n\tconst history = useHistory();\r\n\tconst { country } = props;\r\n\r\n\tconst handleClick = (country) => {\r\n\t\t//passing country object to details page. \r\n\t\thistory.push(`/country-details/`, { country })\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"card my-3 country-card\" onClick={() => handleClick(country)}>\r\n\t\t\t\t<img src={country.flag} className=\"country-card__img card-img-top\" alt={country.name} />\r\n\t\t\t\t<div className=\"card-body text-start\">\r\n\t\t\t\t\t<h5 className=\"card-title\">{country.name}</h5>\r\n\t\t\t\t\t<div className=\"card-text\">Population: {country.population}</div>\r\n\t\t\t\t\t<div className=\"card-text\">Region: {country.region}</div>\r\n\t\t\t\t\t<div className=\"card-text\">Capital: {country.capital}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CountryCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Axios from '../../../axios';\r\nimport Select from 'react-select'\r\n\r\nimport CountryCard from '../../reusable-components/countryCard';\r\n\r\nimport './styles.scss';\r\n\r\nconst Home = () => {\r\n\tconst [countries, setCountries] = useState([]);\r\n\tconst [filteredcountries, setFilteredCountries] = useState([]);\r\n\r\n\tconst options = [\r\n\t\t{ value: 'Africa', label: 'Africa' },\r\n\t\t{ value: 'Americas', label: 'America' },\r\n\t\t{ value: 'Asia', label: 'Asia' },\r\n\t\t{ value: 'Europe', label: 'Europe' },\r\n\t\t{ value: 'Oceania', label: 'Oceania' }\r\n\t]\r\n\t// Changing react select styles using style object.\r\n\tconst regionDDLStyles = {\r\n\t\tindicatorSeparator: styles => ({ ...styles, display: 'none' })\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetCountries()\r\n\t}, []);\r\n\r\n\t// function for getting all countries.\r\n\tconst getCountries = async () => {\r\n\t\tconst result = await Axios.get('all');\r\n\t\tsetCountries(result.data);\r\n\t\tsetFilteredCountries(result.data);\r\n\t}\r\n\r\n\t// function for getting filtering countries based on user input value.\r\n\tconst handleSearch = (e) => {\r\n\t\tconst txt = e.target.value.toLowerCase();\r\n\t\tconst searchedCountries = countries.filter(Country => Country.name.toLowerCase().includes(txt));\r\n\t\tsearchedCountries.length !== 0 ?\r\n\t\t\tsetFilteredCountries(searchedCountries) : setFilteredCountries(countries);\r\n\t}\r\n\r\n\t// function for getting countries based on region.\r\n\tconst handleRegionSelection = async (selectedOption) => {\r\n\t\tconst selectedRegion = selectedOption.value;\r\n\t\tconst regionCountries = await Axios.get(`region/${selectedRegion}`);\r\n\t\tregionCountries.length !== 0 ? setFilteredCountries(regionCountries.data) : setFilteredCountries(countries)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<section>\r\n\t\t\t<section className=\"row g-0 country-encyclopedia__controls\">\r\n\t\t\t\t<div className=\"col-12 col-md-6 py-1\">\r\n\t\t\t\t\t<input type=\"text\" className=\"form-control country-encyclopedia__search-box\" onChange={event => handleSearch(event)} placeholder={`Search for a country...`} />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"col-12 col-md-6 py-1 text-end\">\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tclassName=\"basic-single\"\r\n\t\t\t\t\t\tclassNamePrefix=\"react-select\"\r\n\t\t\t\t\t\tname=\"countriesRegion\"\r\n\t\t\t\t\t\tplaceholder=\"filter By Region\"\r\n\t\t\t\t\t\toptions={options}\r\n\t\t\t\t\t\tonChange={handleRegionSelection}\r\n\t\t\t\t\t\tstyles={regionDDLStyles} />\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\r\n\t\t\t<section className=\"row\">\r\n\t\t\t\t{filteredcountries.map((country) => (\r\n\t\t\t\t\t<div className=\"col-12 col-md-3\" key={country.alpha2Code}>\r\n\t\t\t\t\t\t<CountryCard country={country}></CountryCard>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t\t)}\r\n\t\t\t</section>\r\n\t\t</section >\r\n\t);\r\n}\r\n\r\nexport default Home;","import { useHistory } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faLongArrowAltLeft } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport './styles.scss';\r\n\r\n// Back button component for navigating back in browser.\r\nconst BackButton = (props) => {\r\n\tlet history = useHistory();\r\n\r\n\treturn (\r\n\t\t<button className=\"text-start back-btn\" onClick={() => { history.goBack() }}>\r\n\t\t\t<FontAwesomeIcon icon={faLongArrowAltLeft} />\r\n\t\t\t<span className=\"ms-2\">\r\n\t\t\t\tBack\r\n\t\t\t</span>\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nexport default BackButton;","import { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Axios from '../../../axios';\r\n\r\nimport BackButton from '../../reusable-components/backButton';\r\n\r\nimport './styles.scss';\r\n\r\nconst CountryInformation = (props) => {\r\n\tconst [sideBorders, setSideBorders] = useState([]);\r\n\tconst [selectedCountry, setSelectedCountry] = useState(null)\r\n\tconst location = useLocation();\r\n\tconst countryData = location.state.country;\r\n\r\n\tuseEffect(() => {\r\n\t\t// Getting selected country information from route location.\r\n\t\tsetSelectedCountry(countryData);\r\n\t}, [countryData])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst countryBorders = async () => {\r\n\t\t\tconst bordersNames = [];\r\n\t\t\tif (selectedCountry) {\r\n\t\t\t\tconst borders = selectedCountry.borders;\r\n\t\t\t\t// Iterating over borders code to get border countries names.\r\n\t\t\t\tfor (let index = 0; index < borders.length; index++) {\r\n\t\t\t\t\tconst border = borders[index];\r\n\t\t\t\t\t// Calling countries borders API to get name.\r\n\t\t\t\t\tconst sideBorder = await Axios.get(`alpha/${border}`);\r\n\t\t\t\t\tbordersNames.push(sideBorder.data.name)\r\n\t\t\t\t}\r\n\t\t\t\tsetSideBorders(bordersNames);\r\n\t\t\t}\r\n\t\t};\r\n\t\tcountryBorders()\r\n\t}, [selectedCountry])\r\n\r\n\treturn (\r\n\t\t<div className=\"country-info\">\r\n\t\t\t<div className=\"row my-4\">\r\n\t\t\t\t<div className=\"col-12 text-start\">\r\n\t\t\t\t\t<BackButton />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<section className=\"col-12 row g-0\">\r\n\t\t\t\t<div className=\"col-md-5 col-12\">\r\n\t\t\t\t\t<img className=\"country-info__flag\" src={selectedCountry && selectedCountry.flag} alt=\"country-name\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-7 col-12 country-info__details\">\r\n\t\t\t\t\t<div className=\"my-3 my-md-5 ms-md-5\">\r\n\t\t\t\t\t\t<h2 className=\"fw-bold\">{selectedCountry && selectedCountry.name}</h2>\r\n\r\n\t\t\t\t\t\t<div className=\"country-info__sub-details row\">\r\n\t\t\t\t\t\t\t<div className=\"col-12 col-md-6\">\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t<span className=\"fw-bold\">NativeName: </span> <span> {selectedCountry && selectedCountry.nativeName} </span>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t<span className=\"fw-bold\">Population: </span> <span> {selectedCountry && selectedCountry.population} </span>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t<span className=\"fw-bold\">Region: </span> <span> {selectedCountry && selectedCountry.region} </span>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t<span className=\"fw-bold\">Sub Region: </span>\t<span>\t{selectedCountry && selectedCountry.subregion}\t</span>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t<span className=\"fw-bold\">Capital: </span> <span>\t{selectedCountry && selectedCountry.capital} </span>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-12 col-md-6\">\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t<span className=\"fw-bold\">Top Level Domain: </span>\r\n\t\t\t\t\t\t\t\t\t{selectedCountry && selectedCountry.topLevelDomain && selectedCountry.topLevelDomain.map((domain, idx) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t< span key={idx} >\r\n\t\t\t\t\t\t\t\t\t\t\t\t{domain}\r\n\t\t\t\t\t\t\t\t\t\t\t</span>)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t<span className=\"fw-bold\">Currencies: </span>\r\n\t\t\t\t\t\t\t\t\t{selectedCountry && selectedCountry.currencies && selectedCountry.currencies.map((currency, idx) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<span key={idx}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{currency.name}\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t<span className=\"fw-bold\">Languages: </span>\r\n\t\t\t\t\t\t\t\t\t{selectedCountry && selectedCountry.languages && selectedCountry.languages.map((lang, idx) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"mx-1\" key={idx}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{lang.name},\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"country-info__borders row my-2\">\r\n\t\t\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t\t\t<span className=\"me-2\">\r\n\t\t\t\t\t\t\t\t\tBorder Countries:\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t{sideBorders.length !== 0 ? sideBorders.map((border, index) => (\r\n\t\t\t\t\t\t\t\t\t<span key={index} className=\"badge text-dark country-info__border-badge mx-1\">{border}</span>\r\n\t\t\t\t\t\t\t\t)) : <span className=\"alert-secondary text-center\">No Borders Found</span>}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t</div >\r\n\t);\r\n}\r\n\r\nexport default CountryInformation;","import { useState } from 'react';\r\nimport {\r\n\tBrowserRouter as Router, Switch, Route\r\n} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMoon } from '@fortawesome/free-regular-svg-icons';\r\n\r\nimport Home from './components/common/home';\r\nimport CountryInformation from './components/common/countryInformation';\r\n\r\nimport './App.scss';\r\n\r\nfunction App() {\r\n\tconst [darkMode, setDarkMode] = useState(false);\r\n\t// dark mode switcher.\r\n\tconst handleDarkMode = () => {\r\n\t\tdarkMode === true ? setDarkMode(false) : setDarkMode(true);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={`countries-container ${darkMode === true ? 'dark-mode' : ''}`}>\r\n\t\t\t<Router>\r\n\t\t\t\t<div className={`row py-4 g-0 countries-container__header ${darkMode === true ? 'country-header__dark-mode' : ''}`}>\r\n\t\t\t\t\t<div className=\"col-6 ps-2 ps-md-4\">\r\n\t\t\t\t\t\tWhat in the world?\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-6 pe-2 pe-md-4 text-end\">\r\n\t\t\t\t\t\t<div onClick={handleDarkMode} className=\"country-header__icon-color pointer\">\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faMoon} className=\"me-2\" />\r\n\t\t\t\t\t\t\tDark Mode\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"container App\">\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route exact path=\"/countries-encyclopedia/\">\r\n\t\t\t\t\t\t\t<Home />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route exact path=\"/countries-encyclopedia/country-details\">\r\n\t\t\t\t\t\t\t<CountryInformation />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</div>\r\n\t\t\t</Router>\r\n\t\t</div >\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/NunitoSans-Regular.87d92665.ttf\";","export default __webpack_public_path__ + \"static/media/NunitoSans-Bold.8268666c.ttf\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './fonts/nunito-sans/NunitoSans-Regular.ttf';\r\nimport './fonts/nunito-sans/NunitoSans-Bold.ttf';\r\n// import \"../node_modules/font-awesome/css/font-awesome.min.css\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}